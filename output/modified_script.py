# Author: autogenerated
# Created on: 2025-08-07
# Last updated: 2025-08-07
# Description: Parameterized using OpenAI LLM

import os
import yaml
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import logging
from sklearn.metrics import roc_auc_score, auc, roc_curve, confusion_matrix
from sklearn.model_selection import StratifiedKFold
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.naive_bayes import GaussianNB
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, BaggingClassifier, GradientBoostingClassifier
from sklearn.svm import LinearSVC
from sklearn.neural_network import MLPClassifier
from imblearn.over_sampling import RandomOverSampler
from imblearn.under_sampling import RandomUnderSampler
from typing import Tuple, Dict

# Load the configuration
with open('config.yaml', 'r') as f:
    config = yaml.safe_load(f)

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# Paths
path_in = config.get('DATA_PATH', "./data/")
path_out = config.get('OUTPUT_PATH', "./output/")
results = config.get('RESULT_PATH', "./results/")
print(path_in, path_out, results)

# Rest of the script remains the same